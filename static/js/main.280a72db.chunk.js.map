{"version":3,"sources":["components/Navbar/Navbar.jsx","components/About/About.jsx","components/Projects/Projects.jsx","components/Contact/Contact.jsx","pages/MainPage/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["navStyle","padding","color","Navbar","id","collapseOnSelect","expand","bg","variant","fixed","Brand","href","className","Toggle","aria-controls","Collapse","Nav","style","About","src","alt","Projects","onClick","window","open","Contact","insideStyles","position","top","left","transform","fontFamily","letterSpacing","fontWeight","MainPage","bgImage","strength","height","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.280a72db.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar as BsNav, Nav} from 'react-bootstrap';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport './Navbar.css';\n\nconst navStyle = {\n  padding: \".1em\",\n  color: \"black\"\n};\n\nconst Navbar = () => {\n  return (\n    <div id=\"home\">\n      <BsNav collapseOnSelect expand=\"sm\" bg=\"light\" variant=\"light\" fixed=\"top\">\n        <BsNav.Brand>\n          <AnchorLink href=\"#home\" className=\"BsNav-Brand link\">Aly Nguyen</AnchorLink>\n        </BsNav.Brand>\n        <BsNav.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <BsNav.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <AnchorLink style={navStyle} className=\"Navbar-Link nav-link\" href=\"#about\">About</AnchorLink>\n            <AnchorLink style={navStyle} className=\"Navbar-Link nav-link\" href=\"#projects\">Projects</AnchorLink>\n            <AnchorLink style={navStyle} className=\"Navbar-Link nav-link\" href=\"#contact\">Contact</AnchorLink>\n          </Nav>\n        </BsNav.Collapse>\n      </BsNav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './About.css';\n\nconst About = () => {\n  return (\n    <div className=\"About\" id=\"about\">\n      <h1>About</h1>\n      <img src=\"./images/profile.jpg\" alt=\"about\" />\n      <p>\n        Aly Nguyen has always been self-driven by curiosity. He attended San Francisco State University\n        pursuing a degree in Business Information Systems to find his place in the tech world. While taking \n        basic coding courses, he felt joy and satisfaction from solving challenging problems and decided to \n        take a deeper dive at General Assemblyâ€™s Software Engineering Immersive. Web development soon became \n        a passion and has led him to where he is today, a Full-Stack Developer. <br /><br />\n\n        Aly is a lifelong learner and will continue to produce creative projects reflecting his growth as an engineer.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport './Projects.css';\n\nconst Projects = () => {\n  return (\n    <div className=\"Projects\" id=\"projects\">\n      <h1>Projects</h1>\n      <div className=\"Projects-Container\">\n        <div className=\"Projects-Img\">\n          <img src=\"./images/hangergames.png\" alt=\"Hanger Games\" />\n        </div>\n        <div className=\"Projects-Description\">\n          <h2>Hanger Games</h2>\n          <p>\n            Concept Project<br/>\n            MongoDB/Express/React/Node\n          </p>\n          <p>\n            Web app that uses Yelp's Fusion API and Google Map's API to display nearby restaurant details. \n            A user can log in to save search preferences. \"Choose for Me' feature helps a user decide where \n            to eat.\n          </p>\n          <p className=\"Projects-Links\">\n            <button className=\"btn\" onClick={() => window.open(\"https://hangrygames.herokuapp.com/\", \"_blank\")}>\n              Link\n            </button>\n            <button className=\"btn\" onClick={() => window.open(\"https://github.com/alynguyen/what-to-eat\", \"_blank\")}>\n              GitHub\n            </button>\n          </p>\n        </div>\n      </div>\n      <div className=\"Projects-Container\">\n        <div className=\"Projects-Img\">\n          <img src=\"./images/wechefn.png\" alt=\"WeChef'n\" />\n        </div>\n        <div className=\"Projects-Description\">\n          <h2>WeChef'n</h2>\n          <p>\n            Team Concept Project<br/>\n            Django/Python/Postgres\n          </p>\n          <p>\n            Idea that will allow home chefs to cook and sell meals from the comfort of their own homes. \n            A user can sign up to be a chef and create meals. Other users can add meals to cart/checkout \n            and comment on the meals posted. Uses Amazon S3 for meal photo uploads.\n          </p>\n          <p className=\"Projects-Links\">\n            <button className=\"btn\" onClick={() => window.open(\"https://wechefn.herokuapp.com/\", \"_blank\")}>\n              Link\n            </button>\n            <button className=\"btn\" onClick={() => window.open(\"https://github.com/alynguyen/cook_around\", \"_blank\")}>\n              GitHub\n            </button>\n          </p>\n        </div>\n      </div>\n      <div className=\"Projects-Container\">\n        <div className=\"Projects-Img\">\n          <img src=\"./images/eventb.png\" alt=\"EventB\" />\n        </div>\n        <div className=\"Projects-Description\">\n          <h2>EventB</h2>\n          <p>\n            Concept Project<br/>\n            Express/MongoDB/MVC\n          </p>\n          <p>\n            Simple web app creating a hub for event planning. When logged in with Google's OAuth, a user \n            can view events or create a new one. Events can only be deleted by original creator. All users \n            can comment on events. Designed for mobile.\n          </p>\n          <p className=\"Projects-Links\">\n            <button className=\"btn\" onClick={() => window.open(\"http://alyplans.herokuapp.com/\", \"_blank\")}>\n              Link\n            </button>\n            <button className=\"btn\" onClick={() => window.open(\"https://github.com/alynguyen/event-planner\", \"_blank\")}>\n              GitHub\n            </button>\n          </p>\n        </div>\n      </div>\n      <div className=\"Projects-Container\">\n        <div className=\"Projects-Img\">\n          <img src=\"./images/battleship.png\" alt=\"Battleship\" />\n        </div>\n        <div className=\"Projects-Description\">\n          <h2>Battleship</h2>\n          <p>\n            Concept Project<br/>\n            JavaScript/HTML/CSS\n          </p>\n          <p>\n            Create a battleship like game using HTML and JavaScript. Player places ships down to start game. \n            The player will have to guess all of AI ships to win game. Player can lose if AI guesses all \n            player ships first.\n          </p>\n          <p className=\"Projects-Links\">\n            <button className=\"btn\" onClick={() => window.open(\"https://alynguyen.github.io/battle-ship/\", \"_blank\")}>\n              Link\n            </button>\n            <button className=\"btn\" onClick={() => window.open(\"https://github.com/alynguyen/battle-ship\", \"_blank\")}>\n              GitHub\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\nimport './Contact.css';\n\nconst Contact = () => {\n  return (\n    <div className=\"Contact\" id=\"contact\">\n      <h1>Contact</h1>\n        <button \n          className=\"btn\"\n          onClick={() => window.open(\"mailto:alynguyen925@gmail.com\", \"_blank\")}>\n          Email\n        </button>\n        <button \n          className=\"btn\"\n          onClick={() => window.open(\"https://www.linkedin.com/in/aly-nguyen/\", \"_blank\")}>\n          LinkedIn\n        </button>\n        <button \n          className=\"btn\"\n          onClick={() => window.open(\"https://github.com/alynguyen\", \"_blank\")}>\n          GitHub\n        </button>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport About from '../../components/About/About';\nimport Projects from '../../components/Projects/Projects';\nimport Contact from '../../components/Contact/Contact';\nimport { Parallax } from 'react-parallax';\nimport './MainPage.css';\n\nconst insideStyles = {\n  padding: 20,\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%,-50%)\",\n  color: \"white\",\n  fontFamily: \"Montserrat\",\n  letterSpacing: \".2em\",\n  fontWeight: \"bold\"\n};\n\nexport class MainPage extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Parallax bgImage=\"./images/stars.jpg\" strength={500}>\n          <div style={{ height: 500 }}>\n            <div className=\"MainPage-Inside\" style={insideStyles}>\n              <span className=\"MainPage-Name\">ALY NGUYEN</span><br />\n              <span className=\"MainPage-Title\">\n                SOFTWARE ENGINEER\n              </span>\n            </div>\n          </div>\n        </Parallax>\n        <About />\n        <Projects />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport MainPage from './pages/MainPage/MainPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <MainPage />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}